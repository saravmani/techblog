"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[968],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return g}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),g=a,m=d["".concat(p,".").concat(g)]||d[g]||s[g]||o;return t?n.createElement(m,l(l({ref:r},u),{},{components:t})):n.createElement(m,l({ref:r},u))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1888:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={},p="Angular HttpInterceptor to Handle HTTP Error (Middleware)",c={unversionedId:"Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware",id:"Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware",title:"Angular HttpInterceptor to Handle HTTP Error (Middleware)",description:"In Angular HttpInterceptor act as middleware between client side angular application and browser. We can use this for  - HTTP request Error Handling, Middleware logging, Retry http calls etc.,",source:"@site/docs/Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware.md",sourceDirName:"Angular/Angular2/MiddleWare",slug:"/Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware",permalink:"/techblog/docs/Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Angular/Angular2/MiddleWare/Angular-Http-Interceptor-Middleware.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use Log4Net in Asp.Net Core",permalink:"/techblog/docs/DotNetCore/Asp.netCore/Logging/log4net-with-asp-net-core-quick-start-example"},next:{title:"Angular - Observables - Quick start",permalink:"/techblog/docs/Angular/Angular2/Observables/Angular-observables-example-quick-start"}},u=[{value:"In Angular HttpInterceptor act as middleware between client side angular application and browser. We can use this for  - HTTP request Error Handling, Middleware logging, Retry http calls etc.,",id:"in-angular-httpinterceptor-act-as-middleware-between-client-side-angular-application-and-browser-we-can-use-this-for----http-request-error-handling-middleware-logging-retry-http-calls-etc",children:[],level:6},{value:"Sample HttpInterceptor",id:"sample-httpinterceptor",children:[],level:6}],s={toc:u};function d(e){var r=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"angular-httpinterceptor-to-handle-http-error-middleware"},"Angular HttpInterceptor to Handle HTTP Error (Middleware)"),(0,o.kt)("h6",{id:"in-angular-httpinterceptor-act-as-middleware-between-client-side-angular-application-and-browser-we-can-use-this-for----http-request-error-handling-middleware-logging-retry-http-calls-etc"},"In Angular HttpInterceptor act as middleware between client side angular application and browser. We can use this for  - HTTP request Error Handling, Middleware logging, Retry http calls etc.,"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"I call Interceptors as clientside middleware")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HttpInterceptor will intercepts all the http requests which are made from angular application.\nWe can able to perform any action before http request made to server",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Ex: We can Pass authenticaiton token (bearerToken) on each http request")))),(0,o.kt)("li",{parentName:"ul"},"Also we can anble to handle the response and perform the actions",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Ex: Handle Errors"))))),(0,o.kt)("h6",{id:"sample-httpinterceptor"},"Sample HttpInterceptor"),(0,o.kt)("p",null,"This code performs two actions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Intercept HttpRequest and add the Authorization token to the header"),(0,o.kt)("li",{parentName:"ol"},"Handles the response fromt he server and if it finds UnAuthorised error then\nnavigates the application to authenticaiton page")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,HttpHandler,HttpEvent,HttpInterceptor,HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class MyAppHttpInterceptor implements HttpInterceptor {\n    constructor(private router: Router) { }\n    intercept(objRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        objRequest = objRequest.clone({\n            setHeaders: {// Adding auth token\n                Authorization: `Bearer ${sessionStorage.getItem('bearerToken')}`\n            }\n        });\n        return next.handle(objRequest).pipe(\n            catchError((error: HttpErrorResponse) => {\n                if (error.error instanceof ErrorEvent) {\n                    // Handle Client Side Error\n                    // Example If Network error we can do retry\n                }\n                else {\n                    // Handle Server Side Error\n                }\n                console.log(error);\n                if (error.status === 401) // Handle un UnAuthorised error\n                    this.router.navigate(['authenticaiton-page']);\n                return throwError(error);\n            }\n            ));\n\n    }\n}\n")))}d.isMDXComponent=!0}}]);