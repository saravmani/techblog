"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[3699],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6227:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={},s="Redis With Docker And Asp.net Core",c={unversionedId:"DB/REDIS/Redis-With-Docker-And-Asp-Net-Core",id:"DB/REDIS/Redis-With-Docker-And-Asp-Net-Core",title:"Redis With Docker And Asp.net Core",description:"Simple steps to host Redis With Docker and Connect with Asp.net Core application",source:"@site/docs/DB/REDIS/Redis-With-Docker-And-Asp-Net-Core.md",sourceDirName:"DB/REDIS",slug:"/DB/REDIS/Redis-With-Docker-And-Asp-Net-Core",permalink:"/techblog/docs/DB/REDIS/Redis-With-Docker-And-Asp-Net-Core",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DB/REDIS/Redis-With-Docker-And-Asp-Net-Core.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Microservices - gRPC Communication",permalink:"/techblog/docs/SoftwareDevelopment/Architecture/Microservices/MicroServices-Communication-GRPC"},next:{title:"Resharper Useful Tips",permalink:"/techblog/docs/DeveloperTools/ReSharper/Resharper-Usful-Tips"}},p=[{value:"Simple steps to host Redis With Docker and Connect with Asp.net Core application",id:"simple-steps-to-host-redis-with-docker-and-connect-with-aspnet-core-application",children:[],level:6},{value:"How to run Redis Commands",id:"how-to-run-redis-commands",children:[],level:6},{value:"Some of the useful and frequently used Redis commands",id:"some-of-the-useful-and-frequently-used-redis-commands",children:[],level:6},{value:"Steps to connect with Redis from Asp.net Core application",id:"steps-to-connect-with-redis-from-aspnet-core-application",children:[],level:6}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"redis-with-docker-and-aspnet-core"},"Redis With Docker And Asp.net Core"),(0,a.kt)("h6",{id:"simple-steps-to-host-redis-with-docker-and-connect-with-aspnet-core-application"},"Simple steps to host Redis With Docker and Connect with Asp.net Core application"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Refer- ",(0,a.kt)("a",{parentName:"p",href:"/techblog/docs/Docker/Containers/Docker-Frequently-Used-Comments"},"Frequently used Docker commands"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To run Redis in docker container run below containers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"    docker pull Redis # pulls the docker image\n    docker run -d -p 6379:6379 --name my-redis redis\n    # Creates container from image and run the container\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Now Redis is running in a docker environment")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To check the Redis running status we can check the logs"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"     docker logs -f my-redis\n")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.  So try to use Alpine-based images. For Redis also we are having alpine version"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To Pull the Alpine version of Redis use the below command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"  docker pull redis:alpine\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"Note: Default port for Redis is  - 6379"))),(0,a.kt)("hr",null),(0,a.kt)("h6",{id:"how-to-run-redis-commands"},"How to run Redis Commands"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run below mentioned commands in powershell to access container's terminal")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"    docker exec -it <container_name> /bin/bash\n    # For Linux Container\n    docker exec -it <container_name> cmd.exe\n    # For Windows Container\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Once entered into the terminal, run the below command to interact with Redis")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"    redis-cli # this command will start interactive terminal with redis cache\n")),(0,a.kt)("h6",{id:"some-of-the-useful-and-frequently-used-redis-commands"},"Some of the useful and frequently used Redis commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"    > ping  # To test Redis running status. If this comand returns PONG then Redis working fine\n    > set SomeKeyName SomeSampleValue # To save some value in Key Value format\n    > get SomeKeyName\n")),(0,a.kt)("hr",null),(0,a.kt)("h6",{id:"steps-to-connect-with-redis-from-aspnet-core-application"},"Steps to connect with Redis from Asp.net Core application"),(0,a.kt)("p",null,"Install NuGet StackExchange.Redis package on your .Net Core project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"PM> Install-Package StackExchange.Redis\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'//To Connect with Redis cache\nConnectionMultiplexer objConnetionMultiplexer = ConnectionMultiplexer.Connect("localhost:6379");\nIDatabase objDatabase = objConnetionMultiplexer.GetDatabase();\n\n\n// To Save / Update Data\nbool isSavedOrUpdated = objDatabase.StringSet("SomeKeyName","SomeSampleValue");\n// Note we convert complex objects in to JSON fromat  and then save it\n\n// To Fetch data from cache\nvar data = objDatabase.StringGet("SomeKeyName");\n\n//To Delete\nbool isDeleted = objDatabase.KeyDelete("SomeKeyName");\n')))}d.isMDXComponent=!0}}]);